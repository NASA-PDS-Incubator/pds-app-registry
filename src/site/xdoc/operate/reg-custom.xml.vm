<?xml version="1.0" encoding="UTF-8"?>

<document>
<properties>
  <title>Registry Customization</title>
</properties>

<body>

<section name="Registry Customization">


<p>
<ul>
  <li><a href="#Overview">Overview</a></li>
  <li><a href="#DD">Data Dictionary</a></li>
  <li><a href="#SchemaUpdate">Registry Schema Update</a></li>
</ul>
</p>

<!-- ========================================================== -->

<subsection name="Overview" id="Overview">
<p>
When you create a registry
</p>

<source>
registry-manager create-registry
</source>

<p>
two Elasticsearch indices are created
<ul>
<li><i>registry</i> - main index for PDS4 product metadata.</li>
<li><i>registry-dd</i> - data dictionary, a list of searchable fields that main registry index can have.</li>
</ul>
</p>

<p>
Default Elasticsearch schemas for these indices (<i>registry.json</i> and <i>data-dic.json</i>) 
are located in <i>REGISTRY_HOME/elastic/</i> directory.
Where <i>REGISTRY_HOME</i> is a directory where you installed Registry Manager, for example
<i>/home/pds/registry</i>.
</p>

<p>
Default registry schema defines few common fields such as lid, vid, title, internal refrences and basic file information.
Also, there is a binary field to store the whole PDS label as a BLOB. Lidvid is a primary key.
</p>

<p>
Dynamic field mapping is disabled.
</p>
<source>
...
"mappings": {
    "dynamic": false, 
...
}
</source>

<p>
After running Harvest, the output folder (default is /tmp/harvest/out/) will have two files
<ul>
<li><i>es-docs.json</i> - metadata extracted from PDS4 labels, stored in Newline-delimited JSON (NJSON) format.</li>
<li><i>fields.txt</i> - a list of field names extracted from PDS4 labels.</li>
</ul>
</p>

<p>
When you load data
</p>

<source>
registry-manager load-data -file /home/pds/harvest/out/es-docs.json
</source>

<p>
by default, registry manager will try to update registry schema (add more fields) from <i>fields.txt</i> file.
Those fields must exist in the data dictionary index. You can disable schema update by passing extra parameter 
</p>

<source>
registry-manager load-data -file /home/pds/harvest/out/es-docs.json -updateSchema n
</source>

<p>
If you do that, fields not in Elasticsearch schema are not indexed, but they are still available in "_source" field.
</p>

</subsection>

<!-- ========================================================== -->

<subsection name="Data Dictionary" index="DD">

<p>
When registry is created, the data dictionary is populated with fields (attributes) from 
PDS common and few discipline dictionaries.
Latest versions of PDS4 data dictionaries in different formates are available at 
<a href="https://pds.nasa.gov/datastandards/dictionaries/" target="_blank">PDS website</a>.
</p>

<p>
The following naming convention is used for Elasticsearch fields:
</p>
<source>
&lt;namespace&gt;/&lt;class name&gt;/&lt;namespace&gt;/&lt;attribute name&gt;
</source>

<p>
For example,
</p>
<source>
disp/Display_Direction/disp/vertical_display_direction
geom/Articulation_Device_Parameters/geom/device_id
pds/XML_Schema/pds/name
proc/Software_Program/proc/name
</source>

<p>
You can load more data dictionaries in following formats: 
<ul>
<li>Standard PDS4 data dictionary JSON file, for example, <i>orex_ldd_OREX_1300.JSON</i></li>
<li>Data dump created by 'export-dd' command (NJSON)</li>
<li>Custom CSV file</li>
</ul>
</p>
<p>
For example,
</p>
<source>
registry-manager load-dd -dd /home/pds/schema/orex_ldd_OREX_1300.JSON
</source>

<p>
Elasticsearch data dictionary schema has following fields.
<ul>
<li><i>class_ns</i> - class namespace, e.g., "pds"</li>
<li><i>class_name</i> - class name, e.g., "Element_Array"</li>
<li><i>attr_ns</i> - attribute namespace, e.g., "pds"</li>
<li><i>attr_name</i> - attribute name, e.g., "scaling_factor"</li>
<li><i>data_type</i> - PDS data type, e.g., "ASCII_Real"</li>
<li><i>description</i> - field description</li>
<li><i>es_field_name</i> - Elasticsearch field name, e.g., "pds/Element_Array/pds/scaling_factor"</li>
<li><i>es_data_type</i> - Elasticsearch data type, e.g., "double"</li>
</ul>
</p>

<p>
If you load standard PDS JSON data dictionary, all these fields are populated automatically.
If you use custom CSV file, "es_field_name" and "es_data_type" are required and other fields are optional.
The CSV file must have a header with field names, for example,
</p>

<source>
es_field_name,es_data_type
my_namespace/My_Model_Parameter/my_namespace/parameterA,keyword
my_namespace/My_Model_Parameter/my_namespace/parameterB,integer
my_namespace/My_Model_Parameter/my_namespace/parameterC,double
</source>

<!-- ==================================================== -->

<h4>PDS to Elasticsearch Data Type Mapping</h4>

<p>
If you load standard PDS JSON data dictionary, PDS data types, such as <i>pds.ASCII_Real</i>
are automatically mapped to Elasticsearch data types, such as <i>double</i>.
The mappings are stored in <i>REGISTRY_HOME/elastic/data-dic-types.cfg</i> file.
You can modify this file, to add more mappings or change default values.
</p>

<p>
The file has the following format:
</p>
<source>
&lt;PDS data type&gt; = &lt;Elasticsearch data type&gt;
</source>

<p>
For example,
</p>

<source>
pds.ASCII_Integer = integer
pds.ASCII_Boolean = boolean
pds.ASCII_Real = double
pds.ASCII_Short_String_Collapsed = keyword
...
</source>

</subsection>

<!-- ==================================================== -->

<subsection name="Registry Schema Update" id="SchemaUpdate">

<p>
As described in Overview section, registry schema is updated automatically when tou load data.
You can disable schema update by passing extra parameter to <i>load-data</i> command:
</p>

<source>
registry-manager load-data -file /home/pds/harvest/out/es-docs.json -updateSchema n
</source>

<p>
You can also update registry schema by calling <i>update-schema</i> command:
</p>

<source>
registry-manager update-schema -file /home/pds/harvest/out/fields.txt
</source>
<p>
You can either use <i>fields.txt</i> generated by Harvest or use your own file.
The file contains a list of field names you want to add, one entry per line.
The field definition must exist in the data dictionary index.
Existing fields in registry collection are ignored.
</p>

</subsection>

</section>

</body>
</document>
